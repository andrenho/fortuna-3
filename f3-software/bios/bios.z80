	include ../f3macros.z80

OS_LOCATION = 0xfd00

	org	0x0

	;
	; Print loading message
	;
	
	set_Pa	loading_kernel
	out	(S_PRINT_Z), a

	;
	; Mount SDCard
	;

	out	(FS_MOUNT), a
	call	check_status
	
	;
	; Check if kernel exists
	;

	set_Pa	kernel_filename		; - filename
	out	(FS_STAT), a		; stat file

	in	a, (Ra0)		; if not found...
	or	a
	jp	z, load_kernel

	set_Pa	kernel_not_found	; ...show error
	out	(S_PRINT_Z), a
	jp	stp

	;
	; Load KERNEL file
	;

load_kernel:

	set_Pa0	0			; - file #
	set_Qa	kernel_filename		; - filename
	out	(FS_OPEN_R), a		; open file

	call	check_status

.read_kernel:

	set_Pb  0x800			; - file size (max)
	set_Qa  OS_LOCATION		; - dest mem address
	set_Qb0 0			; - RAM page (0)
	out	(FS_READ), a		; read file

	call	check_status

.jump_to_os:
	out	(FS_CLOSE), a		; close file
	jp	OS_LOCATION

stp:	jp	stp

; =================== END-OF-EXECUTION =======================

	; 
	; Check for SDCard operation status
	;

check_status:
	in	a, (Ra0)		; check return status (Ra0)
	cp	a, 0
	jp	z, .status_ok

	; TODO - print in RED

.status_err:
	set_Pa	red			; print error
	out	(S_PRINT_Z), a
	set_Pa	0xf000
	out	(FS_ERROR), a
	out	(S_PRINT_Z), a
	ld	a, 10
	out	(S_PUT), a
	jp	stp

.status_ok:
	ret

	;
	; Messages
	;

loading_kernel:
	asciiz	"Loading KERNEL...", 10

kernel_filename:
	asciiz	"KERNEL"

kernel_not_found:
	asciiz	"KERNEL not found!"

kernel_error:
	asciiz	"Error loading KERNEL!"

red:
	asciiz	27, "[1;31m"

; vim: ts=8:sts=8:sw=8:noexpandtab
